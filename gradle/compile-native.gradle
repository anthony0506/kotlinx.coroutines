/*
 * Copyright 2016-2018 JetBrains s.r.o. Use of this source code is governed by the Apache 2.0 license.
 */

apply plugin: "kotlin-platform-native"

apply from: project.rootProject.file('gradle/maven-central.gradle')

sourceSets {
    main {
        component {
            targets = ["ios_arm64", "ios_arm32", "ios_x64", "macos_x64", "linux_x64", "mingw_x64"]
            outputKinds = [KLIBRARY]
            pom {
                withXml(configureMavenCentralMetadata)
            }

            extraOpts "-Xuse-experimental=kotlin.Experimental",
                    "-Xuse-experimental=kotlin.experimental.ExperimentalTypeInference",
                    "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
                    "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi",
                    "-Xuse-experimental=kotlinx.coroutines.InternalCoroutinesApi"
        }
    }

    test {
        component {
            extraOpts "-Xuse-experimental=kotlin.Experimental",
                    "-Xuse-experimental=kotlin.experimental.ExperimentalTypeInference",
                    "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
                    "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi",
                    "-Xuse-experimental=kotlinx.coroutines.InternalCoroutinesApi"
        }
    }
}

dependencies {
    expectedBy project(':kotlinx-coroutines-core-common')
}

if (project.hasProperty("teamcity")) {
    afterEvaluate {
        tasks.withType(Class.forName("org.gradle.nativeplatform.test.tasks.RunTestExecutable_Decorated")) {
            args '--ktest_logger=TEAMCITY'
        }
    }
}
